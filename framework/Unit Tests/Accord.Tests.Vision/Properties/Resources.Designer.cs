//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accord.Tests.Vision.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Accord.Tests.Vision.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///    Stump-based 20x20 frontal eye detector.
        ///    Created by Shameem Hameed (http://umich.edu/~shameem)
        ///
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///
        ///  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///
        ///  By downloading, copying, installing or using the software you agree to this license.
        ///  If you do not agree to this license, do not download, install,
        ///  copy or use the software.
        ///
        ///
        ///                        Int [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_eye {
            get {
                return ResourceManager.GetString("haarcascade_eye", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///    Tree-based 20x20 frontal eye detector with better handling of eyeglasses.
        ///    Created by Shameem Hameed (http://umich.edu/~shameem)
        ///
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///
        ///  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///
        ///  By downloading, copying, installing or using the software you agree to this license.
        ///  If you do not agree to this license, do not download, install,
        ///  copy or use the software [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_eye_tree_eyeglasses {
            get {
                return ResourceManager.GetString("haarcascade_eye_tree_eyeglasses", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///    Stump-based 20x20 gentle adaboost frontal face detector.
        ///    Created by Rainer Lienhart.
        ///
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///
        ///  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///
        ///  By downloading, copying, installing or using the software you agree to this license.
        ///  If you do not agree to this license, do not download, install,
        ///  copy or use the software.
        ///
        ///
        ///                        Intel Licens [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_frontalface_alt {
            get {
                return ResourceManager.GetString("haarcascade_frontalface_alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///    Tree-based 20x20 gentle adaboost frontal face detector.
        ///    Created by Rainer Lienhart.
        ///
        ///////////////////////////////////////////////////////////////////////////////////////////
        ///
        ///  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///
        ///  By downloading, copying, installing or using the software you agree to this license.
        ///  If you do not agree to this license, do not download, install,
        ///  copy or use the software.
        ///
        ///
        ///                        Intel License [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_frontalface_alt2 {
            get {
                return ResourceManager.GetString("haarcascade_frontalface_alt2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;!--
        ///  18x15 Nose detector computed with 7000 positive samples
        ///
        /////////////////////////////////////////////////////////////////////////////
        ///| Contributors License Agreement
        ///| IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.
        ///|   By downloading, copying, installing or using the software you agree 
        ///|   to this license.
        ///|   If you do not agree to this license, do not download, install,
        ///|   copy or use the software.
        ///|
        ///| Copyright (c) 2008, Modesto Castrillon-Sant [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string haarcascade_mcs_nose {
            get {
                return ResourceManager.GetString("haarcascade_mcs_nose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap lena_color {
            get {
                object obj = ResourceManager.GetObject("lena_color", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap lena_color_small {
            get {
                object obj = ResourceManager.GetObject("lena_color_small", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap lena_gray {
            get {
                object obj = ResourceManager.GetObject("lena_gray", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap three {
            get {
                object obj = ResourceManager.GetObject("three", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
